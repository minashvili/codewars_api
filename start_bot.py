
import os
from dotenv import load_dotenv
import sqlite3
import random
import telebot
from telebot import types
from telebot.types import ReplyKeyboardMarkup, KeyboardButton


get_problem = ''
cout_done = 0

bot_api_key = os.getenv('SECRET_KEY')
bot = telebot.TeleBot(bot_api_key)


def get_id_with_out_solution(path_to_db: str) -> list[tuple]|None:

    try:
        sqlite_connection = sqlite3.connect(path_to_db)
        cursor = sqlite_connection.cursor()
        #print("connection to SQLite")
        sqlite_select_query = """SELECT id, ext_id FROM kata WHERE kata.solution IS ' ';"""
        cursor.execute(sqlite_select_query)
        rows_from_kata = cursor.fetchall()
        #for row_from_kata in rows_from_kata:
        #print(type(rows_from_kata))
        cursor.close()

    except sqlite3.Error as error:
        print("Error when working with SQLite", error)
    finally:
        if sqlite_connection:
            sqlite_connection.close()
            #print("Connection to SQLite closed")
    
    return rows_from_kata
    #print(rows_from_kata)


def randomly_select_id(list_id_from_kata: list[tuple]) -> str:
    random_id = random.choice(list_id_from_kata)
    return f'https://www.codewars.com/kata/{random_id[1]}'


def insert_solution_to_db(path_to_db_update: str, username: str,  ext_id: str) -> None:
    
    parms = (username, ext_id)
    try:
        sqlite_connection = sqlite3.connect(path_to_db_update)
        cursor = sqlite_connection.cursor()
        sqlite_update_query = """UPDATE kata SET solution = solution || ' ' || ? WHERE ext_id = ?;"""
        cursor.execute(sqlite_update_query, parms)
        sqlite_connection.commit()
        cursor.close()

    except sqlite3.Error as error:
        print("Error when working with SQLite", error)
    finally:
        if sqlite_connection:
            sqlite_connection.close()
    
    return None


@bot.message_handler(commands=['triz'])
def triz(message):

    global get_problem
    get_problem = randomly_select_id(get_id_with_out_solution('kata_from_codewars.db'))
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("Done")
    #btn2 = types.KeyboardButton("Statistics")
    markup.add(btn1)
    bot.send_message('-1002115846059', f"–†–∞–¥–∞—Ä –ê–∫–∞–¥–µ–º–∏–∏ –¢–†–ò–ó üì° –∑–∞—Ñ–µ–∫—Å–∏—Ä–æ–≤–∞–ª –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ! \
                     {get_problem} ", reply_markup=markup) 
    

@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    
    if message.text == 'Done':
        
        if message.from_user.last_name:
            get_name_user = f'{message.from_user.first_name} {message.from_user.last_name}'
        else:
            get_name_user = f'{message.from_user.first_name}'

        id_problem_codewars = get_problem.split('/')[-1]

        bot.send_message('-1002115846059', (
            f'–ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ üëæ{id_problem_codewars} —É–Ω–∏—á—Ç–æ–∂–µ–Ω–æ!'
            f'–ê–∫–∞–¥–µ–º–∏—è –¢–†–ò–ó –≥–æ—Ä–¥–∏—Ç—Å—è —Ç–æ–±–æ–π {get_name_user}')) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        #–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É —Å —Ä–µ—à–µ–Ω–∏–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Æ–ó–ï–†–ê –í –ü–û–õ–ï –†–ï–®–ï–ù–ò–ï –∏–ª–∏ —á—Ç–æ-—Ç–æ —Ç–∞–∫–æ–µ 
        insert_solution_to_db('kata_from_codewars.db', get_name_user, id_problem_codewars)
        global cout_done
        cout_done += 1

        if cout_done > 1:
            bot.send_message('-1002115846059', '–°—á–µ—Ç—á–∏–∫ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –±–æ–ª—å—à–µ –¥–≤—É—Ö, —Å–∏–≥–Ω–∞–ª –ê–∫–∞–¥–µ–º–∏–∏ –¢–†–ò–ó —É—Å–ø–µ—à–Ω–æ —Ç–µ—Ä–º–∏–Ω–∏—Ä—É–µ—Ç—Å—è. –ü–æ–∏—Å–∫ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è.')
            triz('')
            cout_done = 0


load_dotenv()
triz('') #–≠—Ç–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥—Ä—É–≥–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è –¥–Ω—è –ø–æ—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á–∏. –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∞ —ç—Ç–∞ —Ñ—É–∫–Ω—Ü–∏—è —Ä–∞–∑ –≤ 12 —á–∞—Å–æ–≤ –¥–µ—Ä–≥–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é
bot.polling(none_stop=True, interval=0) 


#1) –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á 
#–°–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –¥–≤—É—Ö Done –¥–æ–ª–∂–µ–Ω –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –µ–º—É —Ö–≤–∞—Ç–∏—Ç –∏ –∂–¥–∞—Ç—å –∑–∞–≤—Ç—Ä–∞ —á—Ç–æ–±—ã –ø—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É 
#–ù—É–∂–Ω—ã —É—Å–ª–æ–≤–∏—è –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –º—ã –Ω–µ —É—Å–ø–µ–ª–∏ –∑–∞ –¥–µ–Ω—å —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ –æ–Ω —Ç–æ–≥–¥–∞ –¥–µ–ª–∞–µ—Ç ? –∂–¥–µ—Ç –¥–∞–ª—å—à–µ –∏–ª–∏ –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –ø—Ä–∏—Å—ã–ª–∞–µ—Ç ?
#–ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—Å–µ–≥–¥–∞ –≤ —Å–µ—Ç–∏ —Ç–æ –Ω–∞–¥–æ –¥–µ—Ä–≥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—è triz('') –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ 


